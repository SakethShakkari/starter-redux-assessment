[{"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/index.js":"1","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/App.js":"2","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/app/store.js":"3","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/photos.slice.js":"4","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/suggestion.slice.js":"5","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/index.js":"6","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/search/search.slice.js":"7","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/create/index.js":"8","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/list/index.js":"9","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/search/search-bar/index.js":"10","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/photos.data.js":"11"},{"size":327,"mtime":1697564928274,"results":"12","hashOfConfig":"13"},{"size":469,"mtime":1697564928270,"results":"14","hashOfConfig":"13"},{"size":390,"mtime":1697564928271,"results":"15","hashOfConfig":"13"},{"size":2039,"mtime":1697571594366,"results":"16","hashOfConfig":"13"},{"size":1561,"mtime":1697737712047,"results":"17","hashOfConfig":"13"},{"size":1500,"mtime":1697737681388,"results":"18","hashOfConfig":"13"},{"size":460,"mtime":1697737742634,"results":"19","hashOfConfig":"13"},{"size":1693,"mtime":1697567976400,"results":"20","hashOfConfig":"13"},{"size":1332,"mtime":1697571499584,"results":"21","hashOfConfig":"13"},{"size":872,"mtime":1697571135054,"results":"22","hashOfConfig":"13"},{"size":1408,"mtime":1697564928272,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bvlvbe",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/index.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/App.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/app/store.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/photos.slice.js",["61"],[],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { selectSearchTerm } from \"../search/search.slice\";\nimport photos from \"./photos.data.js\";\n\nconst initialState = {\n  photos,\n};\n\nconst options = {\n  name: \"photos\",\n  initialState,\n  // Task 1: Create an `addPhoto()` case reducer that adds a photo to state.photos.\n  // Task 1 Hint: You can use state.photos.unshift()\n  // `unshift()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\n  reducers: {\n    addPhoto: (state, action) => {\n      state.photos.unshift({\n        id: state.photos.length + 1,\n        caption: action.payload.caption,\n        imageUrl: action.payload.imageUrl,\n      });\n    },\n    // Task 6: Create an `removePhoto()` case reducer that removes a photo from state.photos\n    // Task 6 Hint: You can use state.photos.splice()\n    // `splice()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    removePhoto: (state,action) => {\n      const photoIDToRemove = action.payload;\n      const stateIdtoRemove = state.photos.findIndex((photo)=>photo.id===photoIDToRemove);\n      if (stateIdtoRemove !== -1) {\n        // Use splice to remove the photo at the found index\n        state.photos.splice(stateIdtoRemove, 1);\n      }\n    }\n  },\n};\n\nconst photosSlice = createSlice(options);\n\nexport const { addPhoto, removePhoto } = photosSlice.actions;\n\nexport default photosSlice.reducer;\n\nexport const selectAllPhotos = (state) => state.photos.photos;\nexport const selectFilteredPhotos = (state) => {\n  // Task 12: Complete `selectFilteredPhotos()` selector to return a filtered list of photos whose captions match the user's search term\n  //return state.photos.photos.filter((photo)=> photo.caption.toLowerCase().includes(selectSearchTerm.toLowerCase()));\n  if(!state.search.searchTerm)\n  return state.photos.photos;\n  else\n  return state.photos.photos.filter((photo)=> photo.caption.toLowerCase().includes(state.search.searchTerm.toLowerCase()));\n};\n",[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/suggestion.slice.js",[],[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/index.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/search/search.slice.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/create/index.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/list/index.js",["62","63"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport {\n  // Task 7: Import the `removePhoto()` action creator from the photos slice\n  removePhoto,\n  selectAllPhotos,\n  // Task 13: Import the `selectFilteredPhotos()` selector from the photos slice\n  selectFilteredPhotos\n} from '../photos.slice';\nimport './list.css';\n\nexport default function PhotosList() {\n  const photos = useSelector(selectFilteredPhotos);\n  // Task 14: Call `useSelector()` below with `selectFilteredPhotos` instead of `selectAllPhotos`\n  const photos1 = useSelector(selectFilteredPhotos);\n  // Task 8: Store a reference to the Redux store's dispatch method in a variable called `dispatch`\n  const dispatch = useDispatch();\n\n  function handleDeleteButtonClick(id) {\n    // Task 9: Dispatch the `removePhoto()` action creator, passing in the id\n    dispatch(removePhoto(id));\n  }\n\n  const photosListItems = photos.map(({ id, caption, imageUrl }) => (\n    <li key={id}>\n      <img alt={caption} src={imageUrl} />\n      <div>\n        <p>{caption}</p>\n        <button\n          data-testid={`${caption}-button`}\n          onClick={() => handleDeleteButtonClick(id)}>\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return photosListItems.length > 0 ? (\n    <ul>{photosListItems}</ul>\n  ) : (\n    <h3>No doggies to display...</h3>\n  );\n}\n","/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/search/search-bar/index.js",[],[],"/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/photos.data.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":5,"column":3,"nodeType":"66","messageId":"67","endLine":5,"endColumn":18},{"ruleId":"64","severity":1,"message":"69","line":14,"column":9,"nodeType":"66","messageId":"67","endLine":14,"endColumn":16},"no-unused-vars","'selectSearchTerm' is defined but never used.","Identifier","unusedVar","'selectAllPhotos' is defined but never used.","'photos1' is assigned a value but never used."]