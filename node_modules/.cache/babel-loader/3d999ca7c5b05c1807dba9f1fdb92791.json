{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const fetchSuggestion = createAsyncThunk(\n/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n\"suggestion/fetchSuggestion\", async () => {\n  const response = await fetch(\"http://localhost:3004/api/suggestion\");\n  const jsonresponse = await response.json();\n  return jsonresponse;\n});\nconst initialState = {\n  suggestion: {\n    data: {\n      imageUrl: \"\",\n      caption: \"\"\n    }\n  },\n  loading: false,\n  error: true\n};\nconst options = {\n  name: \"suggestion\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchSuggestion.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchSuggestion.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.suggestion = action.payload;\n      state.loading = false;\n      state.error = false;\n    }).addCase(fetchSuggestion.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n};\nconst suggestionSlice = createSlice(options);\nexport default suggestionSlice.reducer; // Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\n\nexport const selectSuggestion = state => state.suggestion.suggestion;\nexport const selectLoading = state => state.suggestion.loading;\nexport const selectError = state => state.suggestion.error;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchSuggestion","response","fetch","jsonresponse","json","initialState","suggestion","data","imageUrl","caption","loading","error","options","name","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","action","payload","rejected","message","suggestionSlice","reducer","selectSuggestion","selectLoading","selectError"],"sources":["/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/suggestion.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchSuggestion = createAsyncThunk(\n  /* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n\n  \"suggestion/fetchSuggestion\",\n  async () => {\n    const response = await fetch(\"http://localhost:3004/api/suggestion\");\n    const jsonresponse = await response.json();\n    return jsonresponse;\n  }\n);\n\nconst initialState = {\n  suggestion: { data: { imageUrl: \"\", caption: \"\" } },\n  loading: false,\n  error: true,\n};\n\nconst options = {\n  name: \"suggestion\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSuggestion.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchSuggestion.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        state.suggestion = action.payload;\n\n        state.loading = false;\n        state.error = false;\n      })\n      .addCase(fetchSuggestion.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n};\n\nconst suggestionSlice = createSlice(options);\n\nexport default suggestionSlice.reducer;\n\n// Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\nexport const selectSuggestion = (state) => state.suggestion.suggestion;\nexport const selectLoading = (state) => state.suggestion.loading;\nexport const selectError = (state) => state.suggestion.error;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB;AAC7C;AAEA,4BAH6C,EAI7C,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;EACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;EACA,OAAOD,YAAP;AACD,CAR4C,CAAxC;AAWP,MAAME,YAAY,GAAG;EACnBC,UAAU,EAAE;IAAEC,IAAI,EAAE;MAAEC,QAAQ,EAAE,EAAZ;MAAgBC,OAAO,EAAE;IAAzB;EAAR,CADO;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,YADQ;EAEdR,YAFc;EAGdS,QAAQ,EAAE,EAHI;EAIdC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWjB,eAAe,CAACkB,OAD3B,EACqCC,KAAD,IAAW;MAC3CA,KAAK,CAACC,MAAN,GAAe,SAAf;IACD,CAHH,EAIGH,OAJH,CAIWjB,eAAe,CAACqB,SAJ3B,EAIsC,CAACF,KAAD,EAAQG,MAAR,KAAmB;MACrDH,KAAK,CAACC,MAAN,GAAe,WAAf;MAEAD,KAAK,CAACb,UAAN,GAAmBgB,MAAM,CAACC,OAA1B;MAEAJ,KAAK,CAACT,OAAN,GAAgB,KAAhB;MACAS,KAAK,CAACR,KAAN,GAAc,KAAd;IACD,CAXH,EAYGM,OAZH,CAYWjB,eAAe,CAACwB,QAZ3B,EAYqC,CAACL,KAAD,EAAQG,MAAR,KAAmB;MACpDH,KAAK,CAACC,MAAN,GAAe,QAAf;MACAD,KAAK,CAACR,KAAN,GAAcW,MAAM,CAACX,KAAP,CAAac,OAA3B;IACD,CAfH;EAgBD;AArBa,CAAhB;AAwBA,MAAMC,eAAe,GAAG3B,WAAW,CAACa,OAAD,CAAnC;AAEA,eAAec,eAAe,CAACC,OAA/B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIT,KAAD,IAAWA,KAAK,CAACb,UAAN,CAAiBA,UAArD;AACP,OAAO,MAAMuB,aAAa,GAAIV,KAAD,IAAWA,KAAK,CAACb,UAAN,CAAiBI,OAAlD;AACP,OAAO,MAAMoB,WAAW,GAAIX,KAAD,IAAWA,KAAK,CAACb,UAAN,CAAiBK,KAAhD"},"metadata":{},"sourceType":"module"}