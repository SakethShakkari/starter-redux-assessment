{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { selectSearchTerm } from \"../search/search.slice\";\nimport photos from \"./photos.data.js\";\nconst initialState = {\n  photos\n};\nconst options = {\n  name: \"photos\",\n  initialState,\n  // Task 1: Create an `addPhoto()` case reducer that adds a photo to state.photos.\n  // Task 1 Hint: You can use state.photos.unshift()\n  // `unshift()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\n  reducers: {\n    addPhoto: (state, action) => {\n      state.photos.unshift({\n        id: state.photos.length + 1,\n        caption: action.payload.caption,\n        imageUrl: action.payload.imageUrl\n      });\n    },\n    // Task 6: Create an `removePhoto()` case reducer that removes a photo from state.photos\n    // Task 6 Hint: You can use state.photos.splice()\n    // `splice()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    removePhoto: (state, action) => {\n      const photoIDToRemove = action.payload;\n      const stateIdtoRemove = state.photos.findIndex(photo => photo.id === photoIDToRemove);\n\n      if (stateIdtoRemove !== -1) {\n        // Use splice to remove the photo at the found index\n        state.photos.splice(stateIdtoRemove, 1);\n      }\n    }\n  }\n};\nconst photosSlice = createSlice(options);\nexport const {\n  addPhoto,\n  removePhoto\n} = photosSlice.actions;\nexport default photosSlice.reducer;\nexport const selectAllPhotos = state => state.photos.photos;\nexport const selectFilteredPhotos = (state, action) => {\n  // Task 12: Complete `selectFilteredPhotos()` selector to return a filtered list of photos whose captions match the user's search term\n  state.photos.photos.findIndex(photo => photo.id === action.payload);\n};","map":{"version":3,"names":["createSlice","selectSearchTerm","photos","initialState","options","name","reducers","addPhoto","state","action","unshift","id","length","caption","payload","imageUrl","removePhoto","photoIDToRemove","stateIdtoRemove","findIndex","photo","splice","photosSlice","actions","reducer","selectAllPhotos","selectFilteredPhotos"],"sources":["/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/photos/photos.slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { selectSearchTerm } from \"../search/search.slice\";\nimport photos from \"./photos.data.js\";\n\nconst initialState = {\n  photos,\n};\n\nconst options = {\n  name: \"photos\",\n  initialState,\n  // Task 1: Create an `addPhoto()` case reducer that adds a photo to state.photos.\n  // Task 1 Hint: You can use state.photos.unshift()\n  // `unshift()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\n  reducers: {\n    addPhoto: (state, action) => {\n      state.photos.unshift({\n        id: state.photos.length + 1,\n        caption: action.payload.caption,\n        imageUrl: action.payload.imageUrl,\n      });\n    },\n    // Task 6: Create an `removePhoto()` case reducer that removes a photo from state.photos\n    // Task 6 Hint: You can use state.photos.splice()\n    // `splice()` documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    removePhoto: (state,action) => {\n      const photoIDToRemove = action.payload;\n      const stateIdtoRemove = state.photos.findIndex((photo)=>photo.id===photoIDToRemove);\n      if (stateIdtoRemove !== -1) {\n        // Use splice to remove the photo at the found index\n        state.photos.splice(stateIdtoRemove, 1);\n      }\n    }\n  },\n};\n\nconst photosSlice = createSlice(options);\n\nexport const { addPhoto, removePhoto } = photosSlice.actions;\n\nexport default photosSlice.reducer;\n\nexport const selectAllPhotos = (state) => state.photos.photos;\nexport const selectFilteredPhotos = (state, action) => {\n  // Task 12: Complete `selectFilteredPhotos()` selector to return a filtered list of photos whose captions match the user's search term\n  state.photos.photos.findIndex((photo)=> photo.id === action.payload);\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,YAAY,GAAG;EACnBD;AADmB,CAArB;AAIA,MAAME,OAAO,GAAG;EACdC,IAAI,EAAE,QADQ;EAEdF,YAFc;EAGd;EACA;EACA;EACAG,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACN,MAAN,CAAaQ,OAAb,CAAqB;QACnBC,EAAE,EAAEH,KAAK,CAACN,MAAN,CAAaU,MAAb,GAAsB,CADP;QAEnBC,OAAO,EAAEJ,MAAM,CAACK,OAAP,CAAeD,OAFL;QAGnBE,QAAQ,EAAEN,MAAM,CAACK,OAAP,CAAeC;MAHN,CAArB;IAKD,CAPO;IAQR;IACA;IACA;IACAC,WAAW,EAAE,CAACR,KAAD,EAAOC,MAAP,KAAkB;MAC7B,MAAMQ,eAAe,GAAGR,MAAM,CAACK,OAA/B;MACA,MAAMI,eAAe,GAAGV,KAAK,CAACN,MAAN,CAAaiB,SAAb,CAAwBC,KAAD,IAASA,KAAK,CAACT,EAAN,KAAWM,eAA3C,CAAxB;;MACA,IAAIC,eAAe,KAAK,CAAC,CAAzB,EAA4B;QAC1B;QACAV,KAAK,CAACN,MAAN,CAAamB,MAAb,CAAoBH,eAApB,EAAqC,CAArC;MACD;IACF;EAlBO;AANI,CAAhB;AA4BA,MAAMI,WAAW,GAAGtB,WAAW,CAACI,OAAD,CAA/B;AAEA,OAAO,MAAM;EAAEG,QAAF;EAAYS;AAAZ,IAA4BM,WAAW,CAACC,OAA9C;AAEP,eAAeD,WAAW,CAACE,OAA3B;AAEA,OAAO,MAAMC,eAAe,GAAIjB,KAAD,IAAWA,KAAK,CAACN,MAAN,CAAaA,MAAhD;AACP,OAAO,MAAMwB,oBAAoB,GAAG,CAAClB,KAAD,EAAQC,MAAR,KAAmB;EACrD;EACAD,KAAK,CAACN,MAAN,CAAaA,MAAb,CAAoBiB,SAApB,CAA+BC,KAAD,IAAUA,KAAK,CAACT,EAAN,KAAaF,MAAM,CAACK,OAA5D;AACD,CAHM"},"metadata":{},"sourceType":"module"}