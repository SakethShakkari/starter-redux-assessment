{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchSuggestion1 = console.log(\"Hello\");\nexport const fetchSuggestion = createAsyncThunk(\n/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n'suggestion/fetchSuggestion', async () => {\n  console.log(\"createAsyncThunk\");\n  const response = await fetch(\"http://localhost:3004/api/suggestion\");\n  const jsonresponse = await response.json();\n  console.log(\"Hello\" + jsonresponse.status);\n  return jsonresponse;\n});\nconst initialState = {\n  suggestion: {\n    data: {\n      imageUrl: '',\n      caption: ''\n    }\n  },\n  loading: false,\n  error: falsee\n};\nconst options = {\n  name: 'suggestion',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchSuggestion.pending, state => {\n      console.log(state.status);\n      state.status = 'loading';\n    }).addCase(fetchSuggestion.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      console.log(action.payload);\n      state.suggestion = action.payload;\n      console.log(state.suggestion);\n      loading = false;\n      error = false;\n    }).addCase(fetchSuggestion.rejected, (state, action) => {\n      console.log(state.status);\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n};\nconst suggestionSlice = createSlice(options);\nexport default suggestionSlice.reducer; // Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\n\nexport const selectSuggestion = state => state.suggestion.suggestion;\nexport const selectLoading = state => state.suggestion.loading;\nexport const selectError = state => state.suggestion.error;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchSuggestion1","console","log","fetchSuggestion","response","fetch","jsonresponse","json","status","initialState","suggestion","data","imageUrl","caption","loading","error","falsee","options","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","suggestionSlice","reducer","selectSuggestion","selectLoading","selectError"],"sources":["/Users/sshakkari/Documents/Thinkful/Redux/assessment/starter-redux-assessment/src/features/suggestion/suggestion.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const fetchSuggestion1 = console.log(\"Hello\");\n  \n\nexport const fetchSuggestion =\n  createAsyncThunk(/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n  \n  'suggestion/fetchSuggestion', async () => {\n    console.log(\"createAsyncThunk\");\n    const response= await fetch(\"http://localhost:3004/api/suggestion\"); \n    const jsonresponse = await response.json();\n    console.log(\"Hello\"+jsonresponse.status);\n    return jsonresponse;\n  });\n\nconst initialState = {\n  suggestion: {data:{imageUrl:'',caption:''}},\n  loading: false,\n  error: falsee,\n};\n\nconst options = {\n  name: 'suggestion',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSuggestion.pending, (state) => {\n        console.log(state.status);\n        state.status = 'loading';\n      })\n      .addCase(fetchSuggestion.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        console.log(action.payload);\n        state.suggestion = action.payload;\n        console.log(state.suggestion);\n        loading=false;\n        error=false;\n      })\n      .addCase(fetchSuggestion.rejected, (state, action) => {\n        console.log(state.status);\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  }\n};\n\nconst suggestionSlice = createSlice(options);\n\nexport default suggestionSlice.reducer;\n\n// Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\nexport const selectSuggestion = (state) => state.suggestion.suggestion;\nexport const selectLoading = (state) => state.suggestion.loading;\nexport const selectError = (state) => state.suggestion.error;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAzB;AAGP,OAAO,MAAMC,eAAe,GAC1BL,gBAAgB;AAAC;AAEjB,4BAFgB,EAEc,YAAY;EACxCG,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACA,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,sCAAD,CAA3B;EACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;EACAN,OAAO,CAACC,GAAR,CAAY,UAAQI,YAAY,CAACE,MAAjC;EACA,OAAOF,YAAP;AACD,CARe,CADX;AAWP,MAAMG,YAAY,GAAG;EACnBC,UAAU,EAAE;IAACC,IAAI,EAAC;MAACC,QAAQ,EAAC,EAAV;MAAaC,OAAO,EAAC;IAArB;EAAN,CADO;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAEC;AAHY,CAArB;AAMA,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,YADQ;EAEdT,YAFc;EAGdU,QAAQ,EAAE,EAHI;EAIdC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWnB,eAAe,CAACoB,OAD3B,EACqCC,KAAD,IAAW;MAC3CvB,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAAChB,MAAlB;MACAgB,KAAK,CAAChB,MAAN,GAAe,SAAf;IACD,CAJH,EAKGc,OALH,CAKWnB,eAAe,CAACsB,SAL3B,EAKsC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACrDF,KAAK,CAAChB,MAAN,GAAe,WAAf;MACAP,OAAO,CAACC,GAAR,CAAYwB,MAAM,CAACC,OAAnB;MACAH,KAAK,CAACd,UAAN,GAAmBgB,MAAM,CAACC,OAA1B;MACA1B,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAACd,UAAlB;MACAI,OAAO,GAAC,KAAR;MACAC,KAAK,GAAC,KAAN;IACD,CAZH,EAaGO,OAbH,CAaWnB,eAAe,CAACyB,QAb3B,EAaqC,CAACJ,KAAD,EAAQE,MAAR,KAAmB;MACpDzB,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAAChB,MAAlB;MACAgB,KAAK,CAAChB,MAAN,GAAe,QAAf;MACAgB,KAAK,CAACT,KAAN,GAAcW,MAAM,CAACX,KAAP,CAAac,OAA3B;IACD,CAjBH;EAkBD;AAvBa,CAAhB;AA0BA,MAAMC,eAAe,GAAG/B,WAAW,CAACkB,OAAD,CAAnC;AAEA,eAAea,eAAe,CAACC,OAA/B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIR,KAAD,IAAWA,KAAK,CAACd,UAAN,CAAiBA,UAArD;AACP,OAAO,MAAMuB,aAAa,GAAIT,KAAD,IAAWA,KAAK,CAACd,UAAN,CAAiBI,OAAlD;AACP,OAAO,MAAMoB,WAAW,GAAIV,KAAD,IAAWA,KAAK,CAACd,UAAN,CAAiBK,KAAhD"},"metadata":{},"sourceType":"module"}